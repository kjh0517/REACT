// 1) 리액트 컨텍스트의 Provider를 사용하기 위한 react-redux 패키지제공
import {Provider as ReduxProvider} from 'react-redux'

import {Action, configureStore} from '@reduxjs/toolkit'

import ReduxClock from './pages/ReduxClock'
import UseReducerClock from './pages/UseReducerClock'

// 2) 리덕스 저장소와 리듀서, 액션의 선언
// App-level States(앱수준상태): 앱을 구성하는 모든 컴포넌트가 함께 공유할 수 있는 상태
type AppState = {today: Date} // 사용할 변수 선언
const initialAppState = {today: new Date()} // 사용할 변수 초기화

// 3) 리덕스저장소는 AppState 타입 데이터를 저장하는 공간을 생성하려면 reducer함수를 정의.
// Reducer는 state와 action이라는 2가지 매개변수로 새로운 상태를 만들어서 반환.
// action 플럭스에서 나온 용어 type이라는 이름이 있는 속성을 가진 평범한 js 객체
const rootReducer = function (state: AppState = initialAppState, action: Action) {
  return state
}

// 4) 리듀서에서 반환한 새로운 상태를 store라는 객체로 정리해 관리하는 configureStore함수
const store = configureStore({
  reducer: rootReducer,
  middleware: getDefaultMiddleware => getDefaultMiddleware()
})
/*
export default function App() {
  return (
    // Provider 컴포넌트가 동작하기 위해 최상위 위치
    <ReduxProvider store={store}>
      <main className="p-8">
        <UseReducerClock />
        <ReduxClock />
      </main>
    </ReduxProvider>
  )
}
*/
